# vim:set ts=2 sw=2 et:
sudo: required
services:
  - docker

language: generic

cache:
  - apt

env:
  global:
    #- ROS_DISTRO=jade
    #- ROS_CI_DESKTOP="$(lsb_release -cs)"
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - ROS_PARALLEL_JOBS='-j4 -l2'

  matrix:
    #- ROS_DISTRO=indigo
    #- ROS_DISTRO=kinetic
    #- ROS_DISTRO=lunar
    - ROS_DISTRO=melodic

# [[[cog:
# import yaml
# import shlex
#
# def yaml_outl(*args, **kwargs):
#     cog.outl(yaml.dump(args or kwargs, default_flow_style=False))
#
# def docker_exec(*args, bash=False):
#     prefix = bash and '/bin/bash -c ' or ''
#     quote = shlex.quote if bash else lambda x: x
#     return [f"docker exec -t ros {prefix}{quote(cmd)}" for cmd in args]
#
# before_install = [
#     "cd",
#     "mkdir -p $HOME/catkin_ws/src",
#     "cp -pr $CI_SOURCE_PATH $HOME/catkin_ws/src/mavros",
#     "docker pull ros:$ROS_DISTRO",
#     "docker run --rm --name ros -v $HOME/catkin_ws:/catkin_ws -d ros:$ROS_DISTRO",
# ] + docker_exec(
#     "apt-get install -qq -y python-pip python-catkin-tools",
#     "rosdep update",
# )
#
# install = docker_exec(
#     "cd /catkin_ws && catkin config --init --mkdirs",
#     "cd /catkin_ws/src && wstool init",
#     bash=True
# )
#
# yaml_outl(
#     before_install=before_install,
#     install=install,
# )
# ]]]
before_install:
- cd
- mkdir -p $HOME/catkin_ws/src
- cp -pr $CI_SOURCE_PATH $HOME/catkin_ws/src/mavros
- docker pull ros:$ROS_DISTRO
- docker run --rm --name ros -v $HOME/catkin_ws:/catkin_ws -d ros:$ROS_DISTRO
- docker exec -t ros apt-get install -qq -y python-pip python-catkin-tools
- docker exec -t ros rosdep update
install:
- docker exec -t ros /bin/bash -c 'cd /catkin_ws && catkin config --init --mkdirs'
- docker exec -t ros /bin/bash -c 'cd /catkin_ws/src && wstool init'

# [[[end]]] (checksum: fc467a1796783d18b243400b5dd79326)

#before_install:
#  - docker pull ros:$ROS_DISTRO
#  - docker run --rm --name ros -v $CI_SOURCE_PATH:/mavros -d ros:$ROS_DISTRO
#  - docker exec ros "mkdir -p /ws/src && ln -s /mavros /ws/src/"
#  - docker exec ros "rosdep init && rosdep update"

  #- sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  #- sudo sh -c "echo \"deb http://packages.ros.org/ros-shadow-fixed/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  #- wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  # Update python 2.7 version
  #- sudo apt-add-repository ppa:deadsnakes/ppa -y
  #- sudo apt-get update -qq
  #- sudo -H apt-get install -qq -y --allow-unauthenticated python2.7-dev libpython2.7-dev libpython2.7 python2.7 libpython2.7-stdlib
  #  python-pip python-setuptools python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-catkin python-catkin-tools
  # Install Python future module
  #- sudo -H pip install -I future -t /usr/lib/python2.7/dist-packages
  # Update PYTHONPATH
  #- export PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages
  # Source environment
  #- source /opt/ros/$ROS_DISTRO/setup.bash
  # Prepare rosdep
  #- sudo rosdep init
  #- rosdep update

#install:
#  # Create catkin workspace
#  - mkdir -p ~/catkin_ws
#  - cd ~/catkin_ws
#  - catkin config --init --mkdirs
#  # Pull source depends
#  - cd src
#  - wstool init
#  - if [[ -f $ROSINSTALL_FILE ]]; then wstool merge $ROSINSTALL_FILE; fi
#  - wstool up
#  # Link the repo we are testing to the new workspace
#  - ln -s $CI_SOURCE_PATH .
#  # Install dependencies using rosdep
#  - cd ~/catkin_ws
#  - rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -q -y
#  # Install GeographicLib datasets (for Ubuntu Trusty - can only download geoid model)
#  - sudo -H mkdir -p /usr/share/geographiclib
#  - sudo -H geographiclib-datasets-download egm96_5

before_script:
  # Source environment
  - source /opt/ros/$ROS_DISTRO/setup.bash

script:
  - cd ~/catkin_ws
  - catkin config --install -DSETUPTOOLS_DEB_LAYOUT=OFF -DSETUPTOOLS_ARG_EXTRA=""
  - catkin build --no-status --summary
  - source devel/setup.bash
  - catkin run_tests --no-status -p1 -i --summary
  #- catkin_test_results --all ~/catkin_ws/build

after_failure:
  - find ~/catkin_ws/build -path '*/test_results/*' -type f -exec echo "==== {} ====" \; -exec cat {} \;

notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/b856f174ff9736ad23ec
    on_success: change
    on_failure: always
    on_start: false
